$switch-bg: #fff !default;

$switch-height-sm: 1.75rem !default;
$switch-height-md: 2rem !default;
$switch-height-lg: 2.5rem !default;
$switch-bottom-margin: 1.5rem !default;
$switch-border-radius: 2rem !default;

$switch-paddle-bg: #fff !default;
$switch-paddle-transition-speed: .15s !default;
$switch-paddle-transition-ease: ease-out !default;
$switch-active-color: $brand-primary !default;

@mixin switch-base(
  $transition-speed:$switch-paddle-transition-speed,
  $transition-ease:$switch-paddle-transition-ease) {

  border: none;
  margin-bottom: $switch-bottom-margin;
  outline: 0;
  padding: 0;
  position: relative;
  user-select: none;

  // Default label styles for type and transition
  label {
    background: $switch-bg;
    color: transparent;
    cursor: pointer;
    display: block;
    margin-bottom: ($switch-height-md / 2);
    position: relative;
    text-indent: 100%;
    width: $switch-height-md * 2;
    height: $switch-height-md;

    // Transition for the switch label to follow paddle
    transition: left $transition-speed $transition-ease;
  }

  // So that we don't need to recreate the form with any JS, we use the
  // existing checkbox or radio button, but we cleverly position and hide it.
  input {
    left: 10px;
    opacity: 0;
    padding: 0;
    position: absolute;
    top: 9px;

    & + label {
      margin-left: 0;
      margin-right: 0;
    }
  }

  // The paddle for the switch is created from an after psuedoclass
  // content element. This is sized and positioned, and reacts to
  // the state of the input.

  label:after {
    background: $switch-paddle-bg;
    content: "";
    display: block;
    height: $switch-height-md - .5rem;
    left: .25rem;
    position: absolute;
    top: .25rem;
    width: $switch-height-md - .5rem;
    transition: left $transition-speed $transition-ease;
    transform: translate3d(0, 0, 0);
  }

  input:checked + label {
    background: $switch-active-color;
  }

  input:checked + label:after {
    left: $switch-height-md + .25rem;
  }
}

@mixin switch-size($height: $switch-height-md) {

  label {
    height: $height;
    width: $height * 2;
  }

  label:after {
    height: $height - .5rem;
    width: $height - .5rem;
  }

  input:checked + label:after {
    left: $height + .25rem;
  }

}

@mixin switch-style(
  $paddle-bg:$switch-paddle-bg,
  $active-color:$switch-active-color,
  $radius:false,
  $base-style:true) {

  @if $base-style {

    label {
      color: transparent;
      background: $switch-bg;
    }

    label:after {
      background: $paddle-bg;
    }

    input:checked + label {
      background: $active-color;
    }
  }

  // Setting up the radius for switches
  @if $radius == true {
    label {
      border-radius: 2rem;
    }
    label:after {
      border-radius: 2rem;
    }
  } @else if $radius {
    label {
      border-radius: $radius;
    }
    label:after {
      border-radius: $radius;
    }
  }

}

@mixin switch(
  $transition-speed: $switch-paddle-transition-speed,
  $transition-ease: $switch-paddle-transition-ease,
  $height: $switch-height-md,
  $paddle-bg: $switch-paddle-bg,
  $active-color: $switch-active-color,
  $radius:false,
  $base-style:true) {
  @include switch-base($transition-speed, $transition-ease);
  @include switch-size($height);
  @include switch-style($paddle-bg, $active-color, $radius, $base-style);
}

.switch {
  @include switch();
}

.switch-sm {
  @include switch-size($switch-height-sm);
}

.switch-lg {
  @include switch-size($switch-height-lg);
}
